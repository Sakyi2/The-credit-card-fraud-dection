# data-processing.py

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

def load_data(file_path):
    """
    Loads dataset from a CSV file.
    """
    df = pd.read_csv(file_path)
    return df

def preprocess_data(df, target_column):
    """
    Splits dataset into features and target, handles missing values,
    and scales the features.
    """
    # Drop rows with missing values (or handle them differently if needed)
    df = df.dropna()

    # Split features and target
    X = df.drop(columns=[target_column])
    y = df[target_column]

    # Feature scaling
    scaler = StandardScaler()
    X_scaled = scaler.fit_transform(X)

    return X_scaled, y

def split_data(X, y, test_size=0.2, random_state=42):
    """
    Splits data into training and test sets.
    """
    return train_test_split(X, y, test_size=test_size, random_state=random_state)
